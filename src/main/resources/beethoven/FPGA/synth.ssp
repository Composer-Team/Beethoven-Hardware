# Chris Kjellqvist
# 6 September 2023
# Vivado script for performing synthesis. The setup should be managed by another file and everything here should
# be pretty device-agnostic

# Use of directives may require a whole new fine-tune data set
# Some directives that may be interesting:
#   - AreaOptimizied_high
#   - LogicCompaction - Configures LUTs and Carry chains for multipliers in a way that makes it easier for the placer.
#                       Maybe this would be make routability easier...
#   - AlternateRoutability - Use algs. to improve routability with reduced use of MUXFs and CARRYs
#   - PerformanceOptimized
# Parameters:
# - output_dir

# SSP stuff
<%@ val output_dir: String %>

set_param synth.elaboration.rodinMoreOptions "rt::set_parameter var_size_limit 4194304"

update_compile_order -fileset sources_1
update_module_reference design_1_top_0
set_property STEPS.SYNTH_DESIGN.ARGS.RETIMING true [get_runs synth_1]
set_property STEPS.PLACE_DESIGN.TCL.POST {} [get_runs impl_1]
set_property STEPS.PLACE_DESIGN.ARGS.DIRECTIVE ExtraNetDelay_high [get_runs impl_1]
set_property STEPS.PHYS_OPT_DESIGN.ARGS.DIRECTIVE AggressiveExplore [get_runs impl_1]
set_property STEPS.ROUTE_DESIGN.ARGS.DIRECTIVE AggressiveExplore [get_runs impl_1]
set_property STEPS.POST_ROUTE_PHYS_OPT_DESIGN.IS_ENABLED true [get_runs impl_1]
set_property STEPS.POST_ROUTE_PHYS_OPT_DESIGN.ARGS.DIRECTIVE AggressiveExplore [get_runs impl_1]
launch_runs synth_1 -jobs 8
wait_on_run synth_1

launch_runs impl_1 -jobs 8
wait_on_run impl_1

open_run impl_1
report_timing_summary > timing_summary.txt
